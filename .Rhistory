#Количество детей (несовершеннолетних)
h$children=NA
h$children[!is.na(h$uj72.173)]=1
h$children[h$uj72.173=="НЕТ ДЕТЕЙ МОЛОЖЕ 18"]=0
h$children[h$uj72.171=="Нет"]=0
#Трудовой стаж
h$seniority=h$uj161.3y
h$seniority[h$seniority>100]=NA
#Общий доход
h$income=h$uj60
h$income[h$income>10000000]=NA
h$income[h$income>1000000]=NA
#Длина рабочей недели
h$workWeek=h$uj6.2
h$workWeek[h$workWeek>1000]=NA
h$workWeek[is.na(h$work) | h$work==-1]=0
#Образование
h$education<-h$u_diplom
h$education[h$education=='НЕТ ОТВЕТА']=NA
h$education[h$education=='ОТКАЗ ОТ ОТВЕТА']=NA
h$education[h$education=='ЗАТРУДНЯЮСЬ ОТВЕТИТЬ']=NA
#Кодирование образования
h$code=NA
h$code[h$education=="законченное среднее образование"]=1
h$code[h$education=="законченное среднее специальное образование"]=2
h$code[h$education=="законченное высшее образование и выше"]=3
#Формирование сгруппированных переменных
h$educ1=0
h$educ1[which(h$code==1)]=1
h$educ1[is.na(h$education)]=NA
h$educ2=0
h$educ2[which(h$code==2)]=1
h$educ2[is.na(h$education)]=NA
h$educ3=0
h$educ3[which(h$code==3)]=1
h$educ3[is.na(h$education)]=NA
#Помощь в уходе за детьми
h$childrenHelp=h$uf9.11.1#родители
h$childrenHelp[h$uf9.11.2=="Да"]="Да"#супруг
h$childrenHelp[h$uf9.11.3=="Да"]="Да"#бабушка или дедушка
#h$childrenHelp[h$uf9.11.4=="Да"]="Да"#внуки
h$childrenHelp1=h$uf9.11.5#няни
h$childrenHelp=as.numeric(h$childrenHelp)
h$childrenHelp[h$childrenHelp==2]=0
h$childrenHelp1=as.numeric(h$childrenHelp1)
h$childrenHelp1[h$childrenHelp1==2]=0
#Релегия
h$religion=0
h$religion[h$uj72.18=="Вы верующий человек"]=1
#Высшее образование и доход супругов
h$spouseIncome=NA;
h$spouseIncome[h$Brak==0]=0
h$spouseAge=0;
h$spouseReligion=0;
h$childrenAge1=h$children*0;
h$childrenAge2=h$children*0;
h$childrenAge3=h$children*0;
for (i in 1:n)
{
family=as.data.frame(h[h$uid_h==h$uid_h[i],c('uid_i','uh4','male','income','age','religion')])
individual=which(family$uid_i==h$uid_i[i])
familyN=length(family[,1])
for (j in (1:familyN))
{
if (family$uh4[individual]>family$uh4[j])
{
rodstvennik=paste("UB",family$uh4[individual],".9.",family$uh4[j], sep="")
if (!is.null(h[i,rodstvennik]) & !is.null(family$income[j])){ if(!is.na(h[i,rodstvennik]) & !is.na(family$income[j])){
if(h[i,rodstvennik]=="Муж/жена (зарегистрированный или не зарегистрированный)")
{
h$spouseIncome[i]=family$income[j]#доход супруга
h$spouseAge[i]=family$age[j]#возраст супруга
h$spouseReligion[i]=family$religion[j]#религия супруга
}
}}
if (!is.null(h[i,rodstvennik])){ if(!is.na(h[i,rodstvennik])){
if(h[i,rodstvennik]=="Отец/мать")
{
if (family$age[j]<=2) h$childrenAge1[i]=h$childrenAge1[i]+1;
if (family$age[j]>=3 & family$age[j]<=6) h$childrenAge2[i]=h$childrenAge2[i]+1;
if (family$age[j]>=7 & family$age[j]<=18) h$childrenAge3[i]=1;
}
}}
}
if (family$uh4[individual]<family$uh4[j])
{
rodstvennik=paste("UB",family$uh4[j],".9.",family$uh4[individual], sep="")
if (!is.null(h[i,rodstvennik]) & !is.null(family$income[j])){ if(!is.na(h[i,rodstvennik]) & !is.na(family$income[j])){
if(h[i,rodstvennik]=="Муж/жена (зарегистрированный или не зарегистрированный)")
{
h$spouseIncome[i]=family$income[j]#доход супруга
h$spouseAge[i]=family$age[j]#возраст супруга
h$spouseReligion[i]=family$religion[j]#религия супруга
}
}}
if (!is.null(h[i,rodstvennik])){ if(!is.na(h[i,rodstvennik])){
if(h[i,rodstvennik]=="Сын/дочь")
{
if (family$age[j]<=2) h$childrenAge1[i]=h$childrenAge1[i]+1;
if (family$age[j]>=3 & family$age[j]<=6) h$childrenAge2[i]=h$childrenAge2[i]+1;
if (family$age[j]>=7 & family$age[j]<=18) h$childrenAge3[i]=1;
}
}}
}
}
}
#Инвалидность
h$invalide=NA
h$invalide[h$um20.7=="Да"]=1
h$invalide[h$um20.7=="Нет"]=0
#Вес
h$weight=h$um1
h$weight[h$weight>1000]=NA
#Рост
h$height=h$um2/100
h$height[h$height>1000]=NA
#BMI
h$BMI=h$weight/(h$height)^2
h$BMIlow=0
h$BMInorm=0
h$BMInorm[which((h$BMI>=18.5) & (h$BMI<=25))]=1
h$BMInorm[is.na(h$BMI)]=NA
h$BMIlow[which(h$BMI<18.5)]=1
h$BMIlow[is.na(h$BMI)]=NA
#Курение
h$smoke=NA
h$smoke[h$um71=="Нет"]=0
h$smoke[h$um71=="Да"]=1
#Возраст дамми
h$age1=h$age>=25 & h$age<=29
h$age2=h$age>=30 & h$age<=34
h$age3=h$age>=35 & h$age<=39
h$age4=h$age>=40 & h$age<=44
h$age5=h$age>=45 & h$age<=49
h$age6=h$age>=50 & h$age<=55
#Нетрудовой доход
h$nonLaborWage=h$uj10
h$nonLaborWage[h$nonLaborWage>9999997]=NA
h$nonLaborWage[h$work==-1]=0
h$nonLaborWage=h$income-h$nonLaborWage
#Опыт семейной жизни
h$BrakExp=h$Brak*0
h$BrakExp[h$uj322=="Разведены" | h$uj322=="Состоите в повторном зарегистрированном браке"]=1
#Алкоголь
h$alc=NA
h$alc[h$um80.0=="Да, употребляете"]=1
h$alc[h$um80.0=="Нет, никогда не употребляете"]=0
h$alc[h$um81=="2-3 раза в течение последних 30 дней" | h$um81=="Один раз в течение последних 30 дней"]=0
#Тестирование обыкновенной линейной модели
condition1=(h$age>=20 & h$age<=55 & h$male==1)
condition=(condition1 & (h$wage>5000 | h$wage==0 | is.na(h$wage)))
summary(h$wage[condition])
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
Moscow+Peter+OblCentr+Gorod+PGT+
childrenAge1+childrenAge2+childrenAge3+
childrenHelp+
I(log(spouseIncome+1)*Brak)+
I(log(nonLaborWage+1)), data=h[condition,], na.action = na.exclude))
print(modelSummary<-summary(model<-selection(outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
Moscow+Peter+OblCentr+Gorod+PGT+invalide+workWeek+I(workWeek^2),
selection= work~age1+age2+age3+age4+age5+age6+
educ1+educ2+educ3+
Moscow+Peter+OblCentr+Gorod+PGT+
invalide+
Brak+
childrenAge1+childrenAge2+childrenAge3+
childrenHelp+
I(log(nonLaborWage+1))+
(log(spouseIncome+1)*Brak), method =  "2step", data = h[condition & !is.na(h$work),])))
round(modelSummary$estimate,4)
source('D:/gheckman/gheckman.R')
source('D:/gheckman/gheckmanSort.R')
source('D:/gheckman/gheckmanLikelihood.R')
source('D:/gheckman/CovLikelihood.R')
source('D:/gheckman/CovLikelihoodConstraint.R')
source('D:/gheckman/gheckman.R')
source('D:/gheckman/GreatRatio.R')
source('D:/gheckman/d2F.R')
source('D:/gheckman/triangular.R')
source('D:/gheckman/mvncond.R')
source('D:/gheckman/covmatrixReplace.R')
h$BrakTreatment=h$Brak
h$BrakTreatment[h$Brak==0]=-1
zo3=matrix(0,ncol=2,nrow=4)
zo3[1,]=c(1,1);
zo3[2,]=c(1,-1);
zo3[3,]=c(-1,1);
zo3[4,]=c(-1,-1);
group=c(1,2,0,0);
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
Moscow+Peter+OblCentr+Gorod+PGT+invalide+workWeek+I(workWeek^2),
selection1 = work~age1+age2+age3+age4+age5+age6+
educ1+educ2+educ3+
Moscow+Peter+OblCentr+Gorod+PGT+
invalide+
Brak+
childrenAge1+childrenAge2+childrenAge3+
childrenHelp+
I(log(nonLaborWage+1))+
I(log(spouseIncome+1)*Brak),
selection2 = BrakTreatment~age1+age2+age3+age4+age5+age6+
educ1+educ2+educ3+
Moscow+Peter+OblCentr+Gorod+PGT+
invalide,
onlyTwostep = FALSE, zo3=zo3, group=group))
library("memisc") # две и более регрессий в одной табличке
library("dplyr") # манипуляции с данными
library("psych") # описательные статистики
library("lmtest") # тестирование гипотез в линейных моделях
library("sjPlot") # графики
library("sgof")
library("ggplot2") # графики
library("xlsx")
library("tseries")
library("broom")
library("knitr")
library("plm")
library("foreign")
library("car")
library("gplots")
library("apsrtable")
library("tseries")
library("ff")
library('sampleSelection') #Heckman test
library('maxLik') #MLE
library('graphics')
library("stargazer")#Latex
library('BaylorEdPsych')
library('rJava')
library("ggplot2")
library("sandwich")
library("mvtnorm")
library('condMVNorm')
library("xlsx")
library('nloptr')
library('mnormt')
library('Matrix')
library('matrixcalc')
library('numDeriv')
library('optimx')
library('memoise')
library('maxLik')
library('GenSA')
library('optimx')
library('BaylorEdPsych')
library('rootSolve')
library('datasets')
library('abind')
library('pbivnorm')
library('sm')
library("devtools")
options(show.error.locations = TRUE)
install_github("bogdanpotanin/MultivariateSwitchModel")
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
#Записываем и объединяем данные
h = read.spss("D:\\ВШЭ\\3 курс\\Диссертация\\Данные\\25wave.sav", to.data.frame=TRUE, use.value.labels = TRUE, max.value.labels = 30)
h1 = read.spss("D:\\ВШЭ\\3 курс\\Диссертация\\Данные\\25wave1.sav", use.value.labels = TRUE, max.value.labels = 30)
h1$uid_h=h1$UID_H
h=merge(h,h1,"uid_h")
n=length(h[,1])
#Возраст
h$age=h$u_age
#Зарплата
h$wage=h$uj13.2
h$wage[h$wage>=99999990 | h$wage==0 | h$wage=="ЗАТРУДНЯЮСЬ ОТВЕТИТЬ"]=NA
hist(log(h$wage), breaks = 30)
#Переменная на работающих
h$work=NA
h$work[h$uj1=="Вы сейчас работаете" | h$uj1=="Вы находитесь в любом другом оплачиваемом отпуске" | h$uj1=="Вы находитесь в неоплачиваемом отпуске"]=1
h$work[h$uj1=="Или у Вас сейчас нет работы" | h$uj1=="Вы находитесь в отпуске - декретном или по уходу за ребенком до 3-х лет"]=-1
length(h$work[h$work==1])/length(h$work[!is.na(h$work)])#доля работающих
#Ответ на вопрос про зарплату
h$answer=NA
h$answer[is.na(h$wage)==TRUE & h$work==1]=-1
h$answer[is.na(h$wage)==FALSE & h$work==1]=1
length(h$answer[h$answer==1])/length(h$answer)#доля ответивших
#Тип населенного пункта
h$locality=h$status.x
h$Moscow=0
h$Moscow[h$region.x=='Москва' | h$region.x==138]=1
h$Peter=0
h$Peter[h$region.x=='Санкт-Петербург' | h$region.x==141]=1
h$OblCentr=0
h$OblCentr[h$locality=='Областной центр' & h$Moscow==0 & h$Peter==0]=1
h$Gorod=0
h$Gorod[h$locality=='Город' & h$Moscow==0 & h$Peter==0]=1
h$PGT=0
h$PGT[h$locality=='ПГТ' & h$Moscow==0 & h$Peter==0]=1
#Пол
h$male=NA
h$male[h$uh5=="МУЖСКОЙ"]=1
h$male[h$uh5=="ЖЕНСКИЙ"]=0
#Брак
h$marriage=h$u_marst
h$marriage[h$marriage=='НЕТ ОТВЕТА']=NA
h$marriage[h$marriage=='ЗАТРУДНЯЮСЬ ОТВЕТИТЬ']=NA
h$marriage[h$marriage=='ОТКАЗ ОТ ОТВЕТА']=NA
h$Brak=0
h$Brak[h$marriage=='Состоите в зарегистрированном браке']=1
h$Brak[h$marriage=='ОФИЦИАЛЬНО ЗАРЕГИСТРИРОВАНЫ, НО ВМЕСТЕ НЕ ПРОЖИВАЮТ']=1
h$Brak[h$marriage=='Живете вместе, но не зарегистрированы']=0
h$Brak[is.na(h$marriage)]=NA
#Количество детей (несовершеннолетних)
h$children=NA
h$children[!is.na(h$uj72.173)]=1
h$children[h$uj72.173=="НЕТ ДЕТЕЙ МОЛОЖЕ 18"]=0
h$children[h$uj72.171=="Нет"]=0
#Трудовой стаж
h$seniority=h$uj161.3y
h$seniority[h$seniority>100]=NA
#Общий доход
h$income=h$uj60
h$income[h$income>10000000]=NA
h$income[h$income>1000000]=NA
#Длина рабочей недели
h$workWeek=h$uj6.2
h$workWeek[h$workWeek>1000]=NA
h$workWeek[is.na(h$work) | h$work==-1]=0
#Образование
h$education<-h$u_diplom
h$education[h$education=='НЕТ ОТВЕТА']=NA
h$education[h$education=='ОТКАЗ ОТ ОТВЕТА']=NA
h$education[h$education=='ЗАТРУДНЯЮСЬ ОТВЕТИТЬ']=NA
#Кодирование образования
h$code=NA
h$code[h$education=="законченное среднее образование"]=1
h$code[h$education=="законченное среднее специальное образование"]=2
h$code[h$education=="законченное высшее образование и выше"]=3
#Формирование сгруппированных переменных
h$educ1=0
h$educ1[which(h$code==1)]=1
h$educ1[is.na(h$education)]=NA
h$educ2=0
h$educ2[which(h$code==2)]=1
h$educ2[is.na(h$education)]=NA
h$educ3=0
h$educ3[which(h$code==3)]=1
h$educ3[is.na(h$education)]=NA
#Помощь в уходе за детьми
h$childrenHelp=h$uf9.11.1#родители
h$childrenHelp[h$uf9.11.2=="Да"]="Да"#супруг
h$childrenHelp[h$uf9.11.3=="Да"]="Да"#бабушка или дедушка
#h$childrenHelp[h$uf9.11.4=="Да"]="Да"#внуки
h$childrenHelp1=h$uf9.11.5#няни
h$childrenHelp=as.numeric(h$childrenHelp)
h$childrenHelp[h$childrenHelp==2]=0
h$childrenHelp1=as.numeric(h$childrenHelp1)
h$childrenHelp1[h$childrenHelp1==2]=0
#Релегия
h$religion=0
h$religion[h$uj72.18=="Вы верующий человек"]=1
#Высшее образование и доход супругов
h$spouseIncome=NA;
h$spouseIncome[h$Brak==0]=0
h$spouseAge=0;
h$spouseReligion=0;
h$childrenAge1=h$children*0;
h$childrenAge2=h$children*0;
h$childrenAge3=h$children*0;
for (i in 1:n)
{
family=as.data.frame(h[h$uid_h==h$uid_h[i],c('uid_i','uh4','male','income','age','religion')])
individual=which(family$uid_i==h$uid_i[i])
familyN=length(family[,1])
for (j in (1:familyN))
{
if (family$uh4[individual]>family$uh4[j])
{
rodstvennik=paste("UB",family$uh4[individual],".9.",family$uh4[j], sep="")
if (!is.null(h[i,rodstvennik]) & !is.null(family$income[j])){ if(!is.na(h[i,rodstvennik]) & !is.na(family$income[j])){
if(h[i,rodstvennik]=="Муж/жена (зарегистрированный или не зарегистрированный)")
{
h$spouseIncome[i]=family$income[j]#доход супруга
h$spouseAge[i]=family$age[j]#возраст супруга
h$spouseReligion[i]=family$religion[j]#религия супруга
}
}}
if (!is.null(h[i,rodstvennik])){ if(!is.na(h[i,rodstvennik])){
if(h[i,rodstvennik]=="Отец/мать")
{
if (family$age[j]<=2) h$childrenAge1[i]=h$childrenAge1[i]+1;
if (family$age[j]>=3 & family$age[j]<=6) h$childrenAge2[i]=h$childrenAge2[i]+1;
if (family$age[j]>=7 & family$age[j]<=18) h$childrenAge3[i]=1;
}
}}
}
if (family$uh4[individual]<family$uh4[j])
{
rodstvennik=paste("UB",family$uh4[j],".9.",family$uh4[individual], sep="")
if (!is.null(h[i,rodstvennik]) & !is.null(family$income[j])){ if(!is.na(h[i,rodstvennik]) & !is.na(family$income[j])){
if(h[i,rodstvennik]=="Муж/жена (зарегистрированный или не зарегистрированный)")
{
h$spouseIncome[i]=family$income[j]#доход супруга
h$spouseAge[i]=family$age[j]#возраст супруга
h$spouseReligion[i]=family$religion[j]#религия супруга
}
}}
if (!is.null(h[i,rodstvennik])){ if(!is.na(h[i,rodstvennik])){
if(h[i,rodstvennik]=="Сын/дочь")
{
if (family$age[j]<=2) h$childrenAge1[i]=h$childrenAge1[i]+1;
if (family$age[j]>=3 & family$age[j]<=6) h$childrenAge2[i]=h$childrenAge2[i]+1;
if (family$age[j]>=7 & family$age[j]<=18) h$childrenAge3[i]=1;
}
}}
}
}
}
#Инвалидность
h$invalide=NA
h$invalide[h$um20.7=="Да"]=1
h$invalide[h$um20.7=="Нет"]=0
#Вес
h$weight=h$um1
h$weight[h$weight>1000]=NA
#Рост
h$height=h$um2/100
h$height[h$height>1000]=NA
#BMI
h$BMI=h$weight/(h$height)^2
h$BMIlow=0
h$BMInorm=0
h$BMInorm[which((h$BMI>=18.5) & (h$BMI<=25))]=1
h$BMInorm[is.na(h$BMI)]=NA
h$BMIlow[which(h$BMI<18.5)]=1
h$BMIlow[is.na(h$BMI)]=NA
#Курение
h$smoke=NA
h$smoke[h$um71=="Нет"]=0
h$smoke[h$um71=="Да"]=1
#Возраст дамми
h$age1=h$age>=25 & h$age<=29
h$age2=h$age>=30 & h$age<=34
h$age3=h$age>=35 & h$age<=39
h$age4=h$age>=40 & h$age<=44
h$age5=h$age>=45 & h$age<=49
h$age6=h$age>=50 & h$age<=55
#Нетрудовой доход
h$nonLaborWage=h$uj10
h$nonLaborWage[h$nonLaborWage>9999997]=NA
h$nonLaborWage[h$work==-1]=0
h$nonLaborWage=h$income-h$nonLaborWage
#Опыт семейной жизни
h$BrakExp=h$Brak*0
h$BrakExp[h$uj322=="Разведены" | h$uj322=="Состоите в повторном зарегистрированном браке"]=1
#Алкоголь
h$alc=NA
h$alc[h$um80.0=="Да, употребляете"]=1
h$alc[h$um80.0=="Нет, никогда не употребляете"]=0
h$alc[h$um81=="2-3 раза в течение последних 30 дней" | h$um81=="Один раз в течение последних 30 дней"]=0
#Тестирование обыкновенной линейной модели
condition1=(h$age>=20 & h$age<=55 & h$male==1)
condition=(condition1 & (h$wage>5000 | h$wage==0 | is.na(h$wage)))
summary(h$wage[condition])
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
Moscow+Peter+OblCentr+Gorod+PGT+
childrenAge1+childrenAge2+childrenAge3+
childrenHelp+
I(log(spouseIncome+1)*Brak)+
I(log(nonLaborWage+1)), data=h[condition,], na.action = na.exclude))
print(modelSummary<-summary(model<-selection(outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
Moscow+Peter+OblCentr+Gorod+PGT+invalide+workWeek+I(workWeek^2),
selection= work~age1+age2+age3+age4+age5+age6+
educ1+educ2+educ3+
Moscow+Peter+OblCentr+Gorod+PGT+
invalide+
Brak+
childrenAge1+childrenAge2+childrenAge3+
childrenHelp+
I(log(nonLaborWage+1))+
(log(spouseIncome+1)*Brak), method =  "2step", data = h[condition & !is.na(h$work),])))
round(modelSummary$estimate,4)
source('D:/gheckman/gheckman.R')
source('D:/gheckman/gheckmanSort.R')
source('D:/gheckman/gheckmanLikelihood.R')
source('D:/gheckman/CovLikelihood.R')
source('D:/gheckman/CovLikelihoodConstraint.R')
source('D:/gheckman/gheckman.R')
source('D:/gheckman/GreatRatio.R')
source('D:/gheckman/d2F.R')
source('D:/gheckman/triangular.R')
source('D:/gheckman/mvncond.R')
source('D:/gheckman/covmatrixReplace.R')
h$BrakTreatment=h$Brak
h$BrakTreatment[h$Brak==0]=-1
zo3=matrix(0,ncol=2,nrow=4)
zo3[1,]=c(1,1);
zo3[2,]=c(1,-1);
zo3[3,]=c(-1,1);
zo3[4,]=c(-1,-1);
group=c(1,2,0,0);
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
Moscow+Peter+OblCentr+Gorod+PGT+invalide+workWeek+I(workWeek^2),
selection1 = work~age1+age2+age3+age4+age5+age6+
educ1+educ2+educ3+
Moscow+Peter+OblCentr+Gorod+PGT+
invalide+
Brak+
childrenAge1+childrenAge2+childrenAge3+
childrenHelp+
I(log(nonLaborWage+1))+
I(log(spouseIncome+1)*Brak),
selection2 = BrakTreatment~age1+age2+age3+age4+age5+age6+
educ1+educ2+educ3+
Moscow+Peter+OblCentr+Gorod+PGT+
invalide,
onlyTwostep = FALSE, zo3=zo3, group=group))
heckmanList$twostep$model[[1]]
heckmanList$twostep$model[[2]]
heckmanList$mle$result
