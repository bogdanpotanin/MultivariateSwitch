summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak+work+age+BrakTreatment+regionWork+I(Оффициальный.М/Ответили.М), data=h[condition & !is.na(h$children),], na.action = na.exclude))
heckmanList$model
c(nobs(modelMydata),nobs(heckmanList$twostepLS[[1]]))
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak+work+age+BrakTreatment+regionWork+I(Оффициальный.М/Ответили.М), data=h[condition & !is.na(h$children),], na.action = na.exclude))
heckmanList$model
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak+work+age+BrakTreatment+regionWork+I(Оффициальный.М/Ответили.М), data=h[condition & !is.na(h$children),], na.action = na.exclude))
heckmanList$model
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak+work+age+BrakTreatment+regionWork+I(Оффициальный.М/Ответили.М), data=h[condition & !is.na(h$children),], na.action = na.exclude))
heckmanList$model
c(nobs(modelMydata),nobs(heckmanList$twostepLS[[1]]))
summary(work)
summary(h$work)
summary(as.factor(h$work))
summary(as.factor(h$BrakTreatment))
library("memisc") # две и более регрессий в одной табличке
library("dplyr") # манипуляции с данными
library("psych") # описательные статистики
library("lmtest") # тестирование гипотез в линейных моделях
library("sjPlot") # графики
library("sgof")
library("ggplot2") # графики
library("xlsx")
library("tseries")
library("broom")
library("knitr")
library("plm")
library("foreign")
library("car")
library("gplots")
library("apsrtable")
library("tseries")
library("ff")
library('sampleSelection') #Heckman test
library('maxLik') #MLE
library('graphics')
library("stargazer")#Latex
library('BaylorEdPsych')
library('rJava')
library("ggplot2")
library("sandwich")
library("mvtnorm")
library('condMVNorm')
library("xlsx")
library('nloptr')
library('mnormt')
library('Matrix')
library('matrixcalc')
library('numDeriv')
library('optimx')
library('memoise')
library('maxLik')
library('GenSA')
library('optimx')
library('BaylorEdPsych')
library('rootSolve')
library('datasets')
library('abind')
library('pbivnorm')
library('sm')
library("devtools")
options(show.error.locations = TRUE)
install_github("bogdanpotanin/MultivariateSwitchModel")
library("MultivariateSwitch")
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak,
selection1 = work~age+I(age^2)+
educ1+educ2+educ3+
invalide+
children+
Moscow+Peter+OblCentr+Gorod+PGT+I(regionWork),
selection2 = BrakTreatment~age+I(age^2)+
educ1+educ2+educ3+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(Оффициальный.М/Ответили.М),
onlyTwostep = TRUE, zo3=zo3, group=group))
heckmanList$model
y[[3]]
y
install_github("bogdanpotanin/MultivariateSwitchModel")
library("MultivariateSwitch")
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak,
selection1 = work~age+I(age^2)+
educ1+educ2+educ3+
invalide+
children+
Moscow+Peter+OblCentr+Gorod+PGT+I(regionWork),
selection2 = BrakTreatment~age+I(age^2)+
educ1+educ2+educ3+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(Оффициальный.М/Ответили.М),
onlyTwostep = TRUE, zo3=zo3, group=group))
c(nobs(modelMydata),nobs(heckmanList$twostepLS[[1]]))
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak, data=h[condition,], na.action = na.exclude))
heckmanList$model
c(nobs(modelMydata),nobs(heckmanList$twostepLS[[1]]))
system.time(heckmanList<-gheckman(data=h[condition & is.na(h$children),],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak,
selection1 = work~age+I(age^2)+
educ1+educ2+educ3+
invalide+
children+
Moscow+Peter+OblCentr+Gorod+PGT+I(regionWork),
selection2 = BrakTreatment~age+I(age^2)+
educ1+educ2+educ3+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(Оффициальный.М/Ответили.М),
onlyTwostep = TRUE, zo3=zo3, group=group))
system.time(heckmanList<-gheckman(data=h[condition & is.na(h$children),],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak,
selection1 = work~age+I(age^2)+
educ1+educ2+educ3+
invalide+
children+
Moscow+Peter+OblCentr+Gorod+PGT+I(regionWork),
selection2 = BrakTreatment~age+I(age^2)+
educ1+educ2+educ3+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(Оффициальный.М/Ответили.М),
onlyTwostep = TRUE, zo3=zo3, group=group))
system.time(heckmanList<-gheckman(data=h[condition & !is.na(h$children),],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak,
selection1 = work~age+I(age^2)+
educ1+educ2+educ3+
invalide+
children+
Moscow+Peter+OblCentr+Gorod+PGT+I(regionWork),
selection2 = BrakTreatment~age+I(age^2)+
educ1+educ2+educ3+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(Оффициальный.М/Ответили.М),
onlyTwostep = TRUE, zo3=zo3, group=group))
h$wage[h$work==-1]
h$work==-1
summary(h$wage[h$work==-1])
h$wage[h$work==-1]
h$work
h$work
summary(h$wage)
h$wor
h$work
h$wage[h$work==-1]=NA
summary(h$wage)
library("memisc") # две и более регрессий в одной табличке
library("dplyr") # манипуляции с данными
library("psych") # описательные статистики
library("lmtest") # тестирование гипотез в линейных моделях
library("sjPlot") # графики
library("sgof")
library("ggplot2") # графики
library("xlsx")
library("tseries")
library("broom")
library("knitr")
library("plm")
library("foreign")
library("car")
library("gplots")
library("apsrtable")
library("tseries")
library("ff")
library('sampleSelection') #Heckman test
library('maxLik') #MLE
library('graphics')
library("stargazer")#Latex
library('BaylorEdPsych')
library('rJava')
library("ggplot2")
library("sandwich")
library("mvtnorm")
library('condMVNorm')
library("xlsx")
library('nloptr')
library('mnormt')
library('Matrix')
library('matrixcalc')
library('numDeriv')
library('optimx')
library('memoise')
library('maxLik')
library('GenSA')
library('optimx')
library('BaylorEdPsych')
library('rootSolve')
library('datasets')
library('abind')
library('pbivnorm')
library('sm')
library("devtools")
options(show.error.locations = TRUE)
install_github("bogdanpotanin/MultivariateSwitchModel")
library("MultivariateSwitch")
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
#Записываем и объединяем данные
h = read.spss("D:\\ВШЭ\\3 курс\\Диссертация\\Данные\\25wave.sav", to.data.frame=TRUE, use.value.labels = TRUE, max.value.labels = 30)
h1 = read.spss("D:\\ВШЭ\\3 курс\\Диссертация\\Данные\\25wave1.sav", use.value.labels = TRUE, max.value.labels = 30)
h1$uid_h=h1$UID_H
h=merge(h,h1,"uid_h")
#Возраст
h$age=h$u_age
#Новая Москва как Московская область
h$region.x[h$region.x==140]=142
#Squeeze
h2=read.xlsx("D:\\ВШЭ\\3 курс\\Диссертация\\Данные\\Squeeze.xlsx", encoding = "UTF-8", sheetIndex = 1)
h2$Возраст_25_29 = h2$Возраст == "25 – 29";
h$Возраст_25_29 = h$age>=25 & h$age<=29
h2$Возраст_30_34 = h2$Возраст == "30 – 34"
h$Возраст_30_34 = h$age>=30 & h$age<=34
h2$Возраст_35_39 = h2$Возраст == "35 – 39"
h$Возраст_35_39 = h$age>=35 & h$age<=39
h2$Возраст_40_44 = h2$Возраст == "40 – 44"
h$Возраст_40_44 = h$age>=40 & h$age<=44
h2$Возраст_45_49 = h2$Возраст == "45 – 49"
h$Возраст_45_49 = h$age>=45 & h$age<=49
h2$Возраст_50_54 = h2$Возраст == "50 – 54"
h$Возраст_50_54 = h$age>=50 & h$age<=54
h2$Возраст_55_60 = h2$Возраст == "55 – 59"
h$Возраст_55_60 = h$age>=55 & h$age<=60
h2$Возраст_другие = h2$Возраст == "16 – 17"
h$Возраст_другие = h$age<25 | h$age>60
h2$ВозрастMerge=as.factor(-h2$Возраст_другие+h2$Возраст_25_29+2*h2$Возраст_30_34+3*h2$Возраст_35_39+4*h2$Возраст_40_44+
5*h2$Возраст_45_49+6*h2$Возраст_50_54+7*h2$Возраст_55_60)
h$ВозрастMerge=as.factor(-h$Возраст_другие+h$Возраст_25_29+2*h$Возраст_30_34+3*h$Возраст_35_39+4*h$Возраст_40_44+
5*h$Возраст_45_49+6*h$Возраст_50_54+7*h$Возраст_55_60)
h2=h2[h2$ВозрастMerge!=0,]
h2$ВозрастРегион=paste(h2$ВозрастMerge, "vs", h2$region.x)
h$ВозрастРегион=paste(h$ВозрастMerge, "vs", h$region.x)
h=merge(h,h2,c("ВозрастРегион"))
#region wage and employment
h3=read.xlsx("D:\\ВШЭ\\3 курс\\Диссертация\\Данные\\Безработица Зарплата.xlsx", encoding = "UTF-8", sheetIndex = 1)
h=merge(h,h3,"psu.x")
h$region.x=h$region.x.x
n=length(h[,1])
#Зарплата
h$wage=h$uj13.2
h$wage[h$wage>=99999990 | h$wage==0 | h$wage=="ЗАТРУДНЯЮСЬ ОТВЕТИТЬ"]=NA
hist(log(h$wage), breaks = 30)
#Переменная на работающих
h$work=NA
h$work[h$uj1=="Вы сейчас работаете" | h$uj1=="Вы находитесь в любом другом оплачиваемом отпуске" | h$uj1=="Вы находитесь в неоплачиваемом отпуске"]=1
h$work[h$uj1=="Или у Вас сейчас нет работы" | h$uj1=="Вы находитесь в отпуске - декретном или по уходу за ребенком до 3-х лет"]=-1
length(h$work[h$work==1])/length(h$work[!is.na(h$work)])#доля работающих
h$work[h$wage==NA]
summary(h$work[h$wage==NA])
summary(h$wage[h$work==-1])
length(h$wage[h$work==-1])
summary(na.omit(h$wage[h$work==-1]))
length(na.omit(h$wage[h$work==-1]))
h$wage[h$work==-1]=NA#престраховка
summary(h$wage)
#Ответ на вопрос про зарплату
h$answer=NA
h$answer[is.na(h$wage)==TRUE & h$work==1]=-1
h$answer[is.na(h$wage)==FALSE & h$work==1]=1
length(h$answer[h$answer==1])/length(h$answer)#доля ответивших
#Тип населенного пункта
h$locality=h$status.x
h$Moscow=0
h$Moscow[h$region.x=='Москва' | h$region.x==138]=1
h$Peter=0
h$Peter[h$region.x=='Санкт-Петербург' | h$region.x==141]=1
h$OblCentr=0
h$OblCentr[h$locality=='Областной центр' & h$Moscow==0 & h$Peter==0]=1
h$Gorod=0
h$Gorod[h$locality=='Город' & h$Moscow==0 & h$Peter==0]=1
h$PGT=0
h$PGT[h$locality=='ПГТ' & h$Moscow==0 & h$Peter==0]=1
h$Selo=1-(h$Moscow+h$Peter+h$OblCentr+h$Gorod+h$PGT)
#Пол
h$male=NA
h$male[h$uh5=="МУЖСКОЙ"]=1
h$male[h$uh5=="ЖЕНСКИЙ"]=0
#Брак
h$marriage=h$u_marst
h$marriage[h$marriage=='НЕТ ОТВЕТА']=NA
h$marriage[h$marriage=='ЗАТРУДНЯЮСЬ ОТВЕТИТЬ']=NA
h$marriage[h$marriage=='ОТКАЗ ОТ ОТВЕТА']=NA
h$Brak=0
h$Brak[h$marriage=='Состоите в зарегистрированном браке']=1
h$Brak[h$marriage=='ОФИЦИАЛЬНО ЗАРЕГИСТРИРОВАНЫ, НО ВМЕСТЕ НЕ ПРОЖИВАЮТ']=1
h$Brak[h$marriage=='Живете вместе, но не зарегистрированы']=0
h$Brak[is.na(h$marriage)]=NA
#Количество детей (несовершеннолетних)
h$children=NA
h$children[!is.na(h$uj72.173)]=1
h$children[h$uj72.173=="НЕТ ДЕТЕЙ МОЛОЖЕ 18"]=0
h$children[h$uj72.171=="Нет"]=0
summary(h$childrenN)
h$childrenN=h$uj72.173
h$childrenN[h$childrenN=="НЕТ ДЕТЕЙ МОЛОЖЕ 18"]=NA
h$childrenN[h$childrenN=="ЗАТРУДНЯЮСЬ ОТВЕТИТЬ"]=NA
h$childrenN[h$childrenN=="ОТКАЗ ОТ ОТВЕТА"]=NA
h$childrenN[h$childrenN=="НЕТ ОТВЕТА"]=NA
h$childrenN=as.numeric(h$childrenN)-1#почему-то делало +1
h$childrenN[h$uj72.173=="НЕТ ДЕТЕЙ МОЛОЖЕ 18" | h$uj72.171=="Нет"]=0
#Трудовой стаж
h$seniority=h$uj161.3y
h$seniority[h$seniority>100]=NA
#Общий доход
h$income=h$uj60
h$income[h$income>10000000]=NA
h$income[h$income>1000000]=NA
#Длина рабочей недели
h$workWeek=h$uj6.2
h$workWeek[h$workWeek>1000]=NA
h$workWeek[is.na(h$work) | h$work==-1]=0
#Образование
h$education<-h$u_diplom
h$education[h$education=='НЕТ ОТВЕТА']=NA
h$education[h$education=='ОТКАЗ ОТ ОТВЕТА']=NA
h$education[h$education=='ЗАТРУДНЯЮСЬ ОТВЕТИТЬ']=NA
#Кодирование образования
h$code=NA
h$code[h$education=="законченное среднее образование"]=1
h$code[h$education=="законченное среднее специальное образование"]=2
h$code[h$education=="законченное высшее образование и выше"]=3
#Формирование сгруппированных переменных
h$educ1=0
h$educ1[which(h$code==1)]=1
h$educ1[is.na(h$education)]=NA
h$educ2=0
h$educ2[which(h$code==2)]=1
h$educ2[is.na(h$education)]=NA
h$educ3=0
h$educ3[which(h$code==3)]=1
h$educ3[is.na(h$education)]=NA
#Помощь в уходе за детьми
h$childrenHelp=h$uf9.11.1#родители
h$childrenHelp[h$uf9.11.2=="Да"]="Да"#супруг
h$childrenHelp[h$uf9.11.3=="Да"]="Да"#бабушка или дедушка
#h$childrenHelp[h$uf9.11.4=="Да"]="Да"#внуки
h$childrenHelp1=h$uf9.11.5#няни
h$childrenHelp=as.numeric(h$childrenHelp)
h$childrenHelp[h$childrenHelp==2]=0
h$childrenHelp1=as.numeric(h$childrenHelp1)
h$childrenHelp1[h$childrenHelp1==2]=0
#Релегия
h$religion=0
h$religion[h$uj72.18=="Вы верующий человек"]=1
#Высшее образование и доход супругов
h$spouseIncome=NA;
h$spouseIncome[h$Brak==0]=0
h$spouseWage=NA;
h$spouseWage[h$Brak==0]=0
h$spouseAge=0;
h$spouseReligion=0;
h$childrenAge1=h$children*0;
h$childrenAge2=h$children*0;
h$childrenAge3=h$children*0;
#Инвалидность
h$invalide=NA
h$invalide[h$um20.7=="Да"]=1
h$invalide[h$um20.7=="Нет"]=0
#Вес
h$weight=h$um1
h$weight[h$weight>1000]=NA
#Рост
h$height=h$um2/100
h$height[h$height>1000]=NA
#BMI
h$BMI=h$weight/(h$height)^2
h$BMIlow=0
h$BMInorm=0
h$BMInorm[which((h$BMI>=18.5) & (h$BMI<=25))]=1
h$BMInorm[is.na(h$BMI)]=NA
h$BMIlow[which(h$BMI<18.5)]=1
h$BMIlow[is.na(h$BMI)]=NA
#Курение
h$smoke=NA
h$smoke[h$um71=="Нет"]=0
h$smoke[h$um71=="Да"]=1
#Возраст дамми
h$age[h$age>800]=NA
h$age1=h$age>=25 & h$age<=29
h$age2=h$age>=30 & h$age<=34
h$age3=h$age>=35 & h$age<=39
h$age4=h$age>=40 & h$age<=44
h$age5=h$age>=45 & h$age<=49
h$age6=h$age>=50 & h$age<=55
h$age7=h$age>=56 & h$age<=60
#Нетрудовой доход
h$nonLaborWage=h$uj10
h$nonLaborWage[h$nonLaborWage>9999997]=NA
h$nonLaborWage[h$work==-1]=0
h$nonLaborWage=h$income-h$nonLaborWage
#Опыт семейной жизни
h$BrakExp=h$Brak*0
h$BrakExp[h$uj322=="Разведены" | h$uj322=="Состоите в повторном зарегистрированном браке"]=1
#Алкоголь
h$alc=NA
h$alc[h$um80.0=="Да, употребляете"]=1
h$alc[h$um80.0=="Нет, никогда не употребляете"]=0
h$alc[h$um81=="2-3 раза в течение последних 30 дней" | h$um81=="Один раз в течение последних 30 дней"]=0
#Тестирование обыкновенной линейной модели
condition1=(h$age>=25 & h$age<=60 &  h$male==1)
condition=(condition1 & (h$wage>7500 | h$wage==0 | is.na(h$wage)))
#МНК
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak, data=h[condition & !is.na(h$children),], na.action = na.exclude))
h$BrakTreatment=h$Brak
h$BrakTreatment[h$Brak==0]=-1
zo3=matrix(0,ncol=2,nrow=4)
zo3[1,]=c(1,1);
zo3[2,]=c(1,-1);
zo3[3,]=c(-1,1);
zo3[4,]=c(-1,-1);
group=c(1,1,0,0);
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak,
selection1 = work~age+I(age^2)+
educ1+educ2+educ3+
invalide+
children+
Moscow+Peter+OblCentr+Gorod+PGT+I(regionWork),
selection2 = BrakTreatment~age+I(age^2)+
educ1+educ2+educ3+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(Оффициальный.М/Ответили.М),
onlyTwostep = TRUE, zo3=zo3, group=group))
c(nobs(modelMydata),nobs(heckmanList$twostepLS[[1]]))
mean(model.frame(modelMydata)[model.frame(modelMydata)$Brak==1,1])-
mean(model.frame(modelMydata)[model.frame(modelMydata)$Brak==0,1])
c(nobs(modelMydata),nobs(heckmanList$twostepLS[[1]]))
hLS=model.frame(modelMydata)
hLS[,1]=1
CovLS=vcov(modelMydata)
hLS2=hLS; hLS2$Brak=0;
coef2=coef(modelMydata); coef2["Brak"]=0;
ls_mmp=t(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))%*%coef2
ls_std=sqrt(t(colMeans(hLS2))%*%CovLS%*%colMeans(hLS2))
ls_mmp
ls_coef=t(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))%*%coef2
ls_std=sqrt(t(colMeans(hLS2))%*%CovLS%*%colMeans(hLS2))
ls_std
ls_std=sqrt(t(colMeans(hLS2))%*%CovLS%*%colMeans(hLS2))
ls_std
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak, data=h[condition & !is.na(h$children),], na.action = na.exclude))
coef(modelMydata)
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak, data=h[condition & !is.na(h$children),], na.action = na.exclude))
coef(modelMydata)
ls_coef
predict(modelMydata)
hLS
predict(modelMydata)
summary(modelMydata<-lm(log(wage)~educ1+educ2+educ3+seniority+I(seniority^2)+
invalide+
Moscow+Peter+OblCentr+Gorod+PGT+I(log(regionWage))+Brak, data=h[condition & !is.na(h$children),], na.action = na.exclude))
coef(modelMydata)
coef2["Brak"]
coef(modelMydata)
ls_coef
hLS[,1]
hLS=model.frame(modelMydata)
hLS[,1]
mean(hLS[hLS$Brak==1,1])
mean(hLS[hLS$Brak==1,1])-mean(hLS[hLS$Brak==0,1])
heckmanList$model
c(nobs(modelMydata),nobs(heckmanList$twostepLS[[1]]))
predict(modelMydata)
hLS=model.frame(modelMydata)
hLS[,1]=1
CovLS=vcov(modelMydata)
hLS2=hLS; hLS2$Brak=0;
coef2=coef(modelMydata); coef2["Brak"]=0;
ls_coef=t(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))%*%coef2
ls_std=sqrt(t(colMeans(hLS2))%*%CovLS%*%colMeans(hLS2))
hLS%*%CovLS%*%hLS
as.matrix(hLS)%*%CovLS
as.matrix(hLS)%*%CovLS%*%t(as.matrix(hLS))
colMeans(hLS)%*%CovLS%*%t(colMeans(hLS))
colMeans(hLS)
t(colMeans(hLS))%*%CovLS
t(colMeans(hLS))%*%CovLS%*%colMeans(hLS)
sqrt(t(colMeans(hLS))%*%CovLS%*%colMeans(hLS))
sqrt(t(colMeans(hLS[hLS$Brak==1]-hLS[hLS$Brak==0]))%*%CovLS%*%colMeans(hLS[hLS$Brak==1]-hLS[hLS$Brak==0]))
colMeans(hLS[hLS$Brak==1]-hLS[hLS$Brak==0])
sqrt(t(colMeans(hLS[hLS$Brak==1,]-hLS[hLS$Brak==0,]))%*%CovLS%*%colMeans(hLS[hLS$Brak==1,]-hLS[hLS$Brak==0,]))
colMeans(hLS[hLS$Brak==1,]-hLS[hLS$Brak==0,])
sqrt(t(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))%*%CovLS%*%colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))
colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,])
sqrt(t(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))%*%CovLS%*%colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))
colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,])
colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,])
sqrt(t(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))%*%CovLS%*%(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,])))
sqrt(t(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,]))%*%CovLS%*%(colMeans(hLS[hLS$Brak==1,])-colMeans(hLS[hLS$Brak==0,])))
