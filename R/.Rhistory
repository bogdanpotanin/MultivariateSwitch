educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
heckmanList$model[[1]]
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
heckmanList$mle$result
heckmanList$model[[1]]
heckmanList$model[[1]]
heckmanList$model
summary(heckmanList$twostep$twostepLS[[1]])
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
heckmanList$model[[1]]
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
heckmanList$mle$result
heckmanList$model[[1]]
summary(heckmanList$twostep$twostepLS[[1]])
summary(heckmanList$twostep$twostep[[1]])
summary(heckmanList$twostep$twostepLS[[1]])
sortList=heckmanList$sortList
summary(heckmanList$twostep$twostepLS[[1]])
heckmanList$mle$result
as.table(heckmanList$mle$result)
write.table(heckmanList$mle$result)
as.table(heckmanList$mle$result)
rownames(heckmanList$mle$result)
rownames(as.table(heckmanList$mle$result))
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
heckmanList$mle$result
summary(heckmanList$twostep$twostepLS[[1]])
heckmanList$twostep$model[[1]]
heckmanList$mle$result
heckmanList$mle$result
heckmanList$mle$result
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
heckmanList$mle$result
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
heckmanList$mle$result
REP("",3)
rep("",3)
rep(noquotes(""),3)
rep(noquote(""),3)
rep(noquote(''),3)
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
heckmanList$mle$result
rep('',5)
as.table(1:3)
as.table(t(1:3))
tbl=as.table(t(1:3))
rownames(tbl)=NULL
tbl
tbl=as.table(t(1:3))
rownames(tbl)=""
tbl
source('D:/gheckmanPackage/MultivariateSwitch/R/covmatrixReplace.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/d2F.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckman.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanSort.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/GreatRatio.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/mvncond.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/simulation.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/triangular.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLS.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLSAdjustCovariance.R')
source('D:/gheckmanPackage/MultivariateSwitch/R/lambdaCalculate.R')
system.time(heckmanList<-gheckman(data=h[condition,],
outcome = log(wage)~
seniority+I(seniority^2)+
log(regionWage)+
Brak+
I(Moscow+Peter)+OblCentr+Gorod+
invalide+
educ3,
selection1 = work~age+
children+Brak+
invalide+
regionWork+
I(Moscow+Peter)+OblCentr+Gorod+
educ3,
selection2 = educ3Treatment~
educ3_father+
educ3_mother+
school1+
marriageAge+
MoscowPeter_school+OblCentr_school+Gorod_school,
only_twostep = FALSE, rules=zo3, groups=group, show_info = TRUE))
source('D:/gheckmanPackage/MultivariateSwitch/R/gheckmanLikelihood.R')
heckmanList$twostep$model[[1]]
heckmanList$mle$result
